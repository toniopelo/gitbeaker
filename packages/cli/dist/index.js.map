{"version":3,"file":"index.js","sources":["../src/cli.ts","../src/index.ts"],"sourcesContent":["import Chalk from 'chalk';\nimport Sywac from 'sywac';\nimport { camelize, decamelize, depascalize } from 'xcase';\nimport * as Gitbeaker from '@gitbeaker/node';\nimport { getAPIMap } from '@gitbeaker/core';\n\n// Styling settings\nconst commandStyle = Chalk.hex('#e34329').bold;\nconst groupStyle = Chalk.hex('#fca325').bold;\nconst usageStyle = Chalk.hex('#fc6e26').bold;\nconst optionStyle = Chalk.white.bold;\nconst descriptionStyle = Chalk.hex('#848484');\nconst hintStyle = Chalk.hex('#6a5f88');\n\n// Globally configurable arguments\nfunction globalConfig(env = process.env): { [name: string]: Sywac.Options } {\n  return {\n    'gb-token': {\n      alias: 'gl-token',\n      desc: 'Your Gitlab Personal Token',\n      type: 'string',\n      defaultValue: env.GITBEAKER_TOKEN || env.GITLAB_TOKEN,\n    },\n    'gb-oauth-token': {\n      alias: 'gl-oauth-token',\n      desc: 'Your Gitlab OAuth Token',\n      type: 'string',\n      defaultValue: env.GITBEAKER_OAUTH_TOKEN || env.GITLAB_OAUTH_TOKEN,\n    },\n    'gb-job-token': {\n      alias: 'gl-job-token',\n      desc: 'Your Gitlab Job Token',\n      type: 'string',\n      defaultValue: env.GITBEAKER_JOB_TOKEN || env.GITLAB_JOB_TOKEN,\n    },\n    'gb-host': {\n      alias: 'gl-host',\n      desc: 'Your Gitlab API host (Defaults to https://www.gitlab.com)',\n      type: 'string',\n      defaultValue: env.GITBEAKER_HOST || env.GITLAB_HOST,\n    },\n    'gb-version': {\n      alias: 'gl-version',\n      desc: 'The targetted Gitlab API version (Defaults to 4)',\n      type: 'number',\n      defaultValue:\n        (env.GITBEAKER_VERSION && parseInt(env.GITBEAKER_VERSION, 10)) ||\n        (env.GITLAB_VERSION && parseInt(env.GITLAB_VERSION, 10)),\n    },\n    'gb-sudo': {\n      alias: 'gl-sudo',\n      desc: '[Sudo](https://docs.gitlab.com/ee/api/#sudo) query parameter',\n      type: 'string',\n      defaultValue: env.GITBEAKER_SUDO || env.GITLAB_SUDO,\n    },\n    'gb-camelize': {\n      alias: 'gl-camelize',\n      desc: 'Camelizes all response body keys',\n      type: 'boolean',\n      defaultValue:\n        (env.GITBEAKER_CAMELIZE && env.GITBEAKER_CAMELIZE === 'true') ||\n        (env.GITLAB_CAMELIZE && env.GITLAB_CAMELIZE === 'true'),\n    },\n    'gb-request-timeout': {\n      alias: 'gl-request-timeout',\n      desc: 'Timeout for API requests. Measured in ms',\n      type: 'number',\n      defaultValue:\n        (env.GITBEAKER_REQUEST_TIMEOUT && parseInt(env.GITBEAKER_REQUEST_TIMEOUT, 10)) ||\n        (env.GITBEAKER_REQUEST_TIMEOUT && parseInt(env.GITBEAKER_REQUEST_TIMEOUT, 10)),\n    },\n    'gb-profile-token': {\n      alias: 'gl-profile-token',\n      desc: '[Requests Profiles Token](https://docs.gitlab.com/ee/administration/monitoring/performance/request_profiling.html)',\n      type: 'string',\n      defaultValue: env.GITBEAKER_PROFILE_TOKEN || env.GITLAB_PROFILE_TOKEN,\n    },\n    'gb-profile-mode': {\n      alias: 'gl-profile-mode',\n      desc: '[Requests Profiles Token](https://docs.gitlab.com/ee/administration/monitoring/performance/request_profiling.html)',\n      type: 'string',\n      defaultValue: env.GITBEAKER_PROFILE_MODE || env.GITLAB_PROFILE_MODE,\n    },\n  };\n}\n\n// Options to be ignored when making an API call\nconst ignoreOptions = ['_', '$0', 'v', 'version', 'h', 'help', 'g', 'global-args'];\n\n// Helper function to param case strings\nfunction param(string: string): string {\n  let cleaned = string;\n\n  // Handle exceptions\n  const exceptions = ['GitLabCI', 'YML', 'GPG', 'SSH'];\n\n  const ex = exceptions.find((e) => string.includes(e));\n\n  if (ex) cleaned = cleaned.replace(ex, ex.charAt(0).toUpperCase() + ex.slice(1));\n\n  // Decamelize\n  const decamelized = decamelize(cleaned, '-');\n\n  return decamelized !== cleaned ? decamelized : depascalize(cleaned, '-');\n}\n\nfunction setupAPIMethods(setupArgs, methodArgs: unknown[]) {\n  methodArgs.forEach((name) => {\n    if (typeof name !== 'string') return;\n\n    setupArgs.positional(`[--${param(name)}] <${param(name)}>`, {\n      group: 'Required Options',\n      type: 'string',\n    });\n  });\n\n  return setupArgs;\n}\n\nfunction runAPIMethod(ctx, args, apiName: string, method) {\n  const coreArgs = {};\n  const optionalArgs = {};\n  const initArgs = {};\n\n  Object.entries(args).forEach(([argName, value]) => {\n    if (ignoreOptions.includes(argName) || value == null) return;\n\n    const camelCased = camelize(argName.replace('gb-', '').replace('gl-', ''), '-');\n\n    if (globalConfig()[argName.replace('gl-', 'gb-')]) {\n      initArgs[camelCased] = value;\n    } else if (method.args.includes(camelCased)) coreArgs[camelCased] = value;\n    else optionalArgs[camelCased] = value;\n  });\n\n  // Create service\n  const s = new Gitbeaker[apiName](initArgs);\n\n  // Execute function\n  return s[method.name](...Object.values(coreArgs), optionalArgs)\n    .then((r) => {\n      ctx.output = JSON.stringify(r, null, 3);\n    })\n    .catch((e) => {\n      ctx.output = e;\n    });\n}\n\nfunction setupAPIs(setupArgs, apiName: string, methods) {\n  Object.entries(globalConfig()).forEach(([k, v]) => {\n    setupArgs.option(`${k} <value>`, {\n      group: 'Base Options',\n      ...v,\n    });\n  });\n\n  for (let i = 1; i < methods.length; i += 1) {\n    const method = methods[i];\n\n    setupArgs.command(param(method.name), {\n      setup: (setupMethodArgs) => setupAPIMethods(setupMethodArgs, method.args),\n      run: (args, ctx) => runAPIMethod(ctx, args, apiName, method),\n    });\n  }\n\n  return setupArgs;\n}\n\n// Add default settings\nconst cli = Sywac.version('-v, --version')\n  .help('-h, --help')\n  .showHelpByDefault()\n  .epilogue('Copyright 2019')\n  .style({\n    usagePrefix: (s) => usageStyle(s),\n    group: (s) => groupStyle(s),\n    flags: (s) => optionStyle(s),\n    usageCommandPlaceholder: (s) => commandStyle(s),\n    usageOptionsPlaceholder: (s) => optionStyle(s),\n    desc: (s) => descriptionStyle(s),\n    hints: (s) => hintStyle(s),\n  });\n\n// Add Global commands\ncli.boolean('-g --global-args', {\n  desc: 'Show global arguments currently set in the enviroment variables',\n});\n\ncli.command('*', (argv, ctx) => {\n  if (!argv.g) return;\n\n  const display = {};\n\n  Object.entries(globalConfig()).forEach(([k, v]) => {\n    if (v.defaultValue == null) return;\n\n    display[k] = {\n      alias: v.alias,\n      description: v.desc,\n      value: v.defaultValue,\n    };\n  });\n\n  ctx.output =\n    Object.keys(display).length === 0\n      ? 'No global variables have been set!'\n      : JSON.stringify(display, null, 3);\n});\n\n// Add all supported API's\nObject.entries(getAPIMap()).forEach(([apiName, methods]) => {\n  // Skip Gitlab export\n  if (apiName === 'Gitlab') return;\n\n  cli.command(param(apiName), {\n    desc: `The ${apiName} API`,\n    setup: (setupArgs) => setupAPIs(setupArgs, apiName, methods),\n  });\n});\n\nexport { cli };\n","#!/usr/bin/env node\nimport { cli } from './cli';\n\n// Parse input\ncli.parseAndExit();\n"],"names":["Chalk","decamelize","depascalize","camelize","Gitbeaker","Sywac","getAPIMap"],"mappings":"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"}